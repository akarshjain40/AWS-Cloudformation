AWSTemplateFormatVersion: 2010-09-09
Description: "AWS CloudFormation Template for creating an Amazon Aurora instance" 
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Aurora Postgres Info"
        Parameters:
          - DBInstanceID
          - Engine
          - DBName
          - DBInstanceClass
          - DBUsername
          - DBPassword

      - 
        Label:
          default: "Connectivity and Security"
        Parameters:
          - VpcID
          - SecurityGroupID
          - SubnetID
          - SubnetGroupName
          - StorageEncrypted
          - KmsKey

      -
        Label:
          default: "Availability and Additional Info"
        Parameters:
          - MultiAz
          - DBBackupRetentionPeriod
          - PreferredBackupWindow
          - PreferredMaintenanceWindow    
Parameters:
  VpcID:
    Description: VPC stack name in which the cluster is to be deployed
    Type: AWS::EC2::VPC::Id
  SecurityGroupID:
    Description: The ID of security group to associate with Aurora.
    Type: AWS::EC2::SecurityGroup::Id 
  SubnetID:
    Description: The ID of one or more security groups to associate with Aurora.
    Type: 'List<AWS::EC2::Subnet::Id>'         
  DBInstanceID:
    Description: Postgres Instance
    Type: String
    Default: member-profile
  Engine:
    Description: 'Aurora engine version'
    Type: String   
    AllowedValues:
    - 5.7.mysql-aurora.2.07.2 
    - 5.7.mysql-aurora.2.06.0 
    - 5.7.mysql-aurora.2.05.0 
    - aurora-postgresql-11.6 
    - aurora-postgresql-10.11
    - aurora-postgresql-10.7
    - aurora-postgresql-10.6
  DBName:
    Default: postgres
    Description: Posgres database
    Type: String
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DBInstanceClass:
    Description: DB instance class
    Type: String
    AllowedValues:
      - db.t3.medium
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
    Default: db.r4.xlarge
  DBUsername:
    NoEcho: 'true'
    Description: Username for Aurora Postgres database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password for Aurora Postgres database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters. 
  DBBackupRetentionPeriod:
    Description: 'The number of days to keep snapshots of the cluster.'
    Type: Number
    MinValue: '1'
    MaxValue: '35'
    Default: '7'
  SubnetGroupName:
    Description: Name for the subnet group to use (optional)
    Type: String 
  KmsKey:
    Description: ID of KMS key to use to encrypt the disk on the cluster (default key is used if not specified)
    Type: String
  MultiAz:
    Description: High availabilty and failover
    Type: String
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
  PreferredBackupWindow:
    Description: 'The daily time range in UTC during which you want to create automated backups.'
    Type: String
    Default: '06:00-06:30'    
  PreferredMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'
  StorageEncrypted:
    Description: Select if encryption at rest is required
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'

Mappings:
  EngineMap:
    5.7.mysql-aurora.2.07.2:
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.07.2
      Port: 3306
      ClusterParameterGroupFamily: 'aurora5.7'
    5.7.mysql-aurora.2.06.0:
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.06.0
      Port: 3306
      ClusterParameterGroupFamily: 'aurora5.7'
    5.7.mysql-aurora.2.05.0:
      Engine: aurora-mysql
      EngineVersion: 5.7.mysql_aurora.2.05.0
      Port: 3306
      ClusterParameterGroupFamily: 'aurora5.7'
    aurora-postgresql-11.6:
      Engine: aurora-postgresql
      EngineVersion: 11.6
      Port: 5432     
      ClusterParameterGroupFamily: 'aurora-postgresql11'
    aurora-postgresql-10.11:
      Engine: aurora-postgresql
      EngineVersion: 10.11
      Port: 5432     
      ClusterParameterGroupFamily: 'aurora-postgresql10'
    aurora-postgresql-10.7:
      Engine: aurora-postgresql
      EngineVersion: 10.7
      Port: 5432
      ClusterParameterGroupFamily: 'aurora-postgresql10'
    aurora-postgresql-10.6:
      Engine: aurora-postgresql
      EngineVersion: 10.6
      Port: 5432   
      ClusterParameterGroupFamily: 'aurora-postgresql10'
Conditions:
  HasMultiAz: !Equals [ !Ref MultiAz, 'true']
  HasSubnetGroupName: !Not [!Equals [!Ref SubnetGroupName, '']]
  HasKmsKey: !Not [!Equals [!Ref KmsKey, '']]
  HasEngineMySQL: !Equals [!FindInMap [EngineMap, !Ref Engine, Engine], 'aurora-mysql']
Resources:
  ClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'Allow aurora postgres connections from ${AWS::StackName}'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !FindInMap [EngineMap, !Ref Engine, Port]
          ToPort: !FindInMap [EngineMap, !Ref Engine, Port]
          SourceSecurityGroupId: !Ref SecurityGroupID
      VpcId: !Ref VpcID
  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupName: !If [HasSubnetGroupName, !Ref SubnetGroupName, !Ref 'AWS::StackName']
      DBSubnetGroupDescription: !Sub 'Subnet group of ${AWS::StackName}'
      SubnetIds: !Ref SubnetID
  DBClusterParameterGroup:
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: !Ref 'AWS::StackName'
      Family: !FindInMap [EngineMap, !Ref Engine, ClusterParameterGroupFamily]
      Parameters: !If
      - HasEngineMySQL
      - character_set_client: utf8
        character_set_connection: utf8
      - client_encoding: 'UTF8'                  
  AuroraDBCluster:
    DeletionPolicy: Snapshot 
    UpdateReplacePolicy: Snapshot  
    Type: 'AWS::RDS::DBCluster'
    Properties:
      DBClusterIdentifier: !Ref DBInstanceID
      DatabaseName: !Ref DBName
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      Engine: !FindInMap [EngineMap, !Ref Engine, Engine]
      EngineVersion: !FindInMap [EngineMap, !Ref Engine, EngineVersion]
      EngineMode: provisioned
      Port: !FindInMap [EngineMap, !Ref Engine, Port]
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      VpcSecurityGroupIds: 
        - !Ref ClusterSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      DeletionProtection: 'true'
      StorageEncrypted: !Ref StorageEncrypted
      KmsKeyId: !If [HasKmsKey, !Ref KmsKey, !Ref 'AWS::NoValue']
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow   
  AuroraDBInstanceA:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Join ['-', [!Ref DBInstanceID, 'A']]
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: !FindInMap [EngineMap, !Ref Engine, Engine]
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
  AuroraDBInstanceB:
    Condition: HasMultiAz
    Type: 'AWS::RDS::DBInstance'
    DependsOn: AuroraDBInstanceA
    Properties:
      DBInstanceIdentifier: !Join ['-', [!Ref DBInstanceID, 'B']]      
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: !Ref DBInstanceClass
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: !FindInMap [EngineMap, !Ref Engine, Engine]    
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true

Outputs:
  ClusterName:
    Description: 'The name of the cluster.'
    Value: !Ref AuroraDBCluster
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'     
  DNSName:
    Description: 'The connection endpoint for the DB cluster.'
    Value: !GetAtt 'AuroraDBCluster.Endpoint.Address'
    Export:
      Name: !Sub '${AWS::StackName}-DNSName'
  DBInstanceA:
    Description: 'The connection endpoint for the first DB Instance.'
    Value: !GetAtt 'AuroraDBInstanceA.Endpoint.Address'
  DBInstanceB:
    Condition: HasMultiAz
    Description: 'The connection endpoint for the second DB Instance.'
    Value: !GetAtt 'AuroraDBInstanceB.Endpoint.Address'
  DBClusterParameterGroup:
    Description: 'The parameter group of DBcluster'
    Value: !Ref DBClusterParameterGroup  
  ClusterVpcId:
    Description: 'Vpc of the Cluster'
    Value: !GetAtt ClusterSecurityGroup.VpcId
  SubnetName:
    Description: 'Subnetname of the Cluster'
    Value: !Ref DBSubnetGroup    
  ClusterSecurityGroups:
    Description: 'Security groups of the Cluster'
    Value: !GetAtt ClusterSecurityGroup.GroupId

