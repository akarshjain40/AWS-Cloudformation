---
AWSTemplateFormatVersion: '2010-09-09'
Description: Creating SQS Standard Queue
Parameters:
  QueueName:
    Description: "Name of the Queue"
    Type: "String"
  DelaySeconds:
    Description: 'The time in seconds that the delivery of all messages in the queue
      is delayed.'
    ConstraintDescription: 'Specify an integer value of 0 to 900 (15 minutes).' 
    Type: Number
    MinValue: '0'
    MaxValue: '900'
    Default: '0'
  MessageRetentionPeriod:
    Description: 'The number of seconds that Amazon SQS retains a message.'
    ConstraintDescription: 'Specify an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days).'
    Type: Number
    MinValue: '60'
    MaxValue: '1209600'
    Default: '604800' 
  ReceiveMessageWaitTimeSeconds:
    Description: Specifies the duration, in seconds, that the ReceiveMessage action
      call waits until a message is in the queue in order to include it in the response,
      as opposed to returning an empty response if a message is not yet available.
      1 to 20
    Type: Number
    MinValue: '0'
    MaxValue: '20'
    Default: '10'
  VisibilityTimeout:
    Description: This should be longer than the time it would take to process and
      delete a message, this should not exceed 12 hours.
    Type: Number
    MinValue: '0'
    MaxValue: '43200'
    Default: '300'    
  UsedeadletterQueue:
    Description: A dead-letter queue is a queue that other (source) queues can target
      for messages that can't be processed (consumed) successfully. You can set aside
      and isolate these messages in the dead-letter queue to determine why their processing
      doesn't succeed.
    Type: String
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'false'
Mappings: {}
Conditions:
  CreateDeadLetterQueue:
    Fn::Equals:
    - Ref: UsedeadletterQueue
    - 'true'
Resources:
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Ref: QueueName
      DelaySeconds:
        Ref: DelaySeconds
      MessageRetentionPeriod:
        Ref: MessageRetentionPeriod
      ReceiveMessageWaitTimeSeconds:
        Ref: ReceiveMessageWaitTimeSeconds
      RedrivePolicy:
        Fn::If:
        - CreateDeadLetterQueue
        - deadLetterTargetArn:
            Fn::GetAtt:
            - DeadLetterQueue
            - Arn
          maxReceiveCount: 5
        - Ref: AWS::NoValue
      VisibilityTimeout:
        Ref: VisibilityTimeout
  DeadLetterQueue:
    Condition: CreateDeadLetterQueue
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Join:
          - '-'
          - - Ref: QueueName
            - 'DeadLetterQueue'

Outputs:
  QueueURL:
    Description: URL of newly created SQS Queue
    Value:
      Ref: SQSQueue
  QueueARN:
    Description: ARN of newly created SQS Queue
    Value:
      Fn::GetAtt:
      - SQSQueue
      - Arn
  QueueName:
    Description: Name newly created SQS Queue
    Value:
      Fn::GetAtt:
      - SQSQueue
      - QueueName
  DeadLetterQueueURL:
    Condition: CreateDeadLetterQueue
    Description: URL of the dead letter queue
    Value:
      Ref: DeadLetterQueue
  DeadLetterQueueARN:
    Condition: CreateDeadLetterQueue
    Description: ARN of the dead letter queue
    Value:
      Fn::GetAtt:
      - DeadLetterQueue
      - Arn
  DeadLetterQueueName:
    Condition: CreateDeadLetterQueue
    Description: Name of the dead letter queue
    Value:
      Fn::GetAtt:
      - DeadLetterQueue
      - QueueName 
